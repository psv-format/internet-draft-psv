



Network Working Group                                              Brian
Internet-Draft                                          PSV Format Group
Intended status: Informational                               15 May 2024
Expires: 16 November 2024


                          Pipe Separated Value
                        draft-psv-format-latest

Abstract

   The Pipe Separated Value (PSV) format is a structured way to
   represent tabular data in Markdown, designed to be easily convertible
   to other data formats like JSON or CBOR.  It supports data
   annotations for specifying data types or formats, cell properties for
   enforcing constraints, and an optional table ID using the Consistent
   Attribute Syntax.  This document defines the specification for the
   PSV format.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 16 November 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  PSV Table Structure
   4.  Features
     4.1.  Data Annotations
       4.1.1.  Cell Properties Data Annotation
   5.  Examples
     5.1.  Example 1: Basic Table
     5.2.  Example 2: Table with Properties
   6.  Security Considerations
   7.  IANA Considerations
   8.  Normative References
   Acknowledgments
   Author's Address

1.  Introduction

   The PSV format aims to provide a standardized way to represent
   tabular data within Markdown documents.  It extends the existing
   Markdown table syntax with additional features and conventions to
   enable structured data representation and interoperability with other
   data formats.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  PSV Table Structure

   A PSV table consists of the following components:

   1.  *Table ID (Optional)*: A table can have an optional ID specified
       using the Consistent Attribute Syntax
       (https://talk.commonmark.org/t/consistent-attribute-syntax/272),
       enclosed in curly braces followed by a hash (#) and the desired
       ID. e.g., {#tableID}

   2.  *Header Row*: The first row of the table, containing the column
       names.  Column headers can include data annotations within square
       brackets to specify the expected data type or format of values in
       that column. e.g., | Name | Age [int] | City [str] | in addition
       with column id {#headerID}.

   3.  *Delimiter Row*: A row where each cell consist of at least three
       dashes (---) separating the header row from the data rows.  All
       characters between the dashes are ignored (This is so that :
       being used for left/right alignment in a typical markdown table
       is not affected).

   4.  *Data Rows*: The subsequent rows containing the actual data for
       each column.

   Each row can have | in each cell as long as it is escaped via \|
   (escaping rule is based on github tables).

4.  Features

4.1.  Data Annotations

   Data annotations within square brackets in the header row specify the
   expected data type or format of values in that column.  The following
   data annotations are supported:

   *  *string* or *str*: Represents a string value (default if no
      annotation is provided).

   *  *integer* or *int*: Represents an integer value.

   *  *float*: Represents a floating-point number.

   *  *bool*: Represents a boolean value.  Accepted values: true, false,
      yes, no, active, inactive.

   *  *hex*: Represents a hexadecimal string (encoded using CBOR tag
      CBOR_TAG_HEXADECIMAL_STRING).

   *  *base64*: Represents Base64-encoded binary data (encoded using
      CBOR tag CBOR_TAG_BASE64).

   *  *datauri*: Represents a data URI (encoded using CBOR tag
      CBOR_TAG_BASE64URL).

   *  *datetime*: Represents a date-time value (encoded using CBOR tag
      CBOR_TAG_STD_DATE_TIME_STRING).

   *  *uuid*: Represents a UUID value (encoded using CBOR tag
      CBOR_TAG_STD_DATE_TIME_STRING).

   Additional data annotations can be added in the future to support
   other data types or formats.

4.1.1.  Cell Properties Data Annotation

   These properties provide additional metadata or constraints for the
   values in that column.  The following cell properties are supported:

   *  *unique*: Indicates that the values in this column must be unique
      across all rows.

   *  *key*: Marks this column as a key column, which can be used for
      identifying or grouping rows.

   *  Custom properties can be defined and used as needed.

5.  Examples

5.1.  Example 1: Basic Table

   {#basic-table}
   | Name    | Age [int] | City [str]    |
   | ---     | ---       | ---           |
   | Alice   | 25        | New York      |
   | Bob     | 32        | San Francisco |
   | Charlie | 19        | London        |

   This example demonstrates a basic PSV table with columns for "Name",
   "Age" (annotated as an integer), and "City" (annotated as a string).
   The table has an optional ID "basic-table" specified using the
   Consistent Attribute Syntax.

5.2.  Example 2: Table with Properties

{#employee-table}
| ID [str] [uuid] [unique] [key]       | Name    | Birthday [date] | Want Candy [bool] | Candy Count [int] |
| ---                                  | ---     | ---             | ---               | ---               |
| 0b32a75e-e190-4a71-b0e1-45e0d826584f | Alice   | 1994-05-15      | yes               | 10                |
| 1e6e3e5a-f6cf-4b30-bc42-5365418604a1 | Bob     | 1989-08-20      | no                |                   |
| 9a7f548f-0854-4c23-bb39-1aefb48b47ae | Charlie | 1996-12-10      | yes               | 32                |

   This example showcases a PSV table with various data annotations and
   cell properties.  The "ID" column is annotated as a string, with the
   "uuid", "unique", and "key" properties specified.  The "Birthday"
   column uses the "date" annotation, while the "Want Candy" column is
   annotated as a boolean, and the "Candy Count" column is an integer.

6.  Security Considerations

   TODO: Security considerations for the PSV format.

7.  IANA Considerations

   This document has no IANA actions.

8.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Acknowledgments

   TODO: Acknowledge contributors and relevant sources.

Author's Address

   Brian
   PSV Format Group
   Email: mofosyne@gmail.com
